#!/usr/bin/env python

from gdextension_build import ffmpeg_download
from gdextension_build import methods
from pathlib import Path
import os
import SCons

Import("env")

if env["platform"] == "linuxbsd":
    if not "RPATH" in env:
        env.Append(RPATH=env.Literal("\\$$ORIGIN"))

env_ffmpeg = env.Clone()

FFMPEG_DUMMY = "thirdparty/ffmpeg/LICENSE.txt"

module_obj = []

excluded = []

sources = [x for x in Glob("*.cpp") if str(x) not in excluded]

env_ffmpeg.Prepend(CPPPATH="thirdparty/ffmpeg/include")
env.Append(LIBPATH=["#modules/ffmpeg/thirdparty/ffmpeg/lib"])

ffmpeg_libs = ["avcodec", "avfilter", "avformat", "avutil", "swresample", "swscale"]

if env.msvc:
    # MSVC: Think Different(tm)
    env.Append(LINKFLAGS=[x + ".lib" for x in ffmpeg_libs])
else:
    # mingw
    env.Append(LIBS=ffmpeg_libs)

ffmpeg_install_action = ffmpeg_download.ffmpeg_install(env_ffmpeg, "#bin", "thirdparty/ffmpeg")
env_ffmpeg.Depends(sources, ffmpeg_install_action)

# env_ffmpeg.Append(CPPDEFINES=["FFMPEG_MT_GPU_UPLOAD"])
if ARGUMENTS.get("ffmpeg_shared", "no") == "yes":
    # Shared lib compilation
    env_ffmpeg.Append(CCFLAGS=["-fPIC"])
    env_ffmpeg["LIBS"] = FFMPEG_LIBS
    shared_lib = env_ffmpeg.SharedLibrary(target="#bin/ffmpeg", source=sources)
    shared_lib_shim = shared_lib[0].name.rsplit(".", 1)[0]
    env.Append(LIBPATH=["#bin"])
    env.Append(LIBS=[shared_lib_shim])
else:
    env_ffmpeg.add_source_files(module_obj, sources)
    env.modules_sources += module_obj
